begin              oneOrMore().optional().greedy()            期望出现0到多次，并且尽可能的重复次数多
one                times(2, 4).greedy()                       期望出现0、2、3或者4次，并且尽可能的重复次数多
two                times(4)                                   期望出现4次
three              timesOrMore(2).greedy()                    期望出现0、2或多次，并且尽可能的重复次数多
four

---------------- 所有的pattern都没有skip策略的情况下，输入为：
{"id":1,"num":0,"name":"1a"}
{"id":1,"num":0,"name":"2a"}
{"id":1,"num":0,"name":"3a"}
{"id":1,"num":1,"name":"4a"}
{"id":1,"num":1,"name":"5a"}
{"id":1,"num":1,"name":"6a"}
{"id":1,"num":2,"name":"7a"}
{"id":1,"num":2,"name":"8a"}
{"id":1,"num":2,"name":"9a"}
{"id":1,"num":2,"name":"10a"}
{"id":1,"num":3,"name":"11a"}
{"id":1,"num":3,"name":"12a"}
{"id":1,"num":3,"name":"13a"}
{"id":1,"num":4,"name":"14a"}

-------------- 这种情况下的输出为：
key 为：begin
输出：(1,0,1a)
输出：(1,0,2a)
输出：(1,0,3a)
key 为：one
输出：(1,1,4a)
输出：(1,1,5a)
输出：(1,1,6a)
key 为：two
输出：(1,2,7a)
输出：(1,2,8a)
输出：(1,2,9a)
输出：(1,2,10a)
key 为：three
输出：(1,3,11a)
输出：(1,3,12a)
输出：(1,3,13a)
key 为：four
输出：(1,4,14a)
key 为：begin
输出：(1,0,2a)
输出：(1,0,3a)
key 为：one
输出：(1,1,4a)
输出：(1,1,5a)
输出：(1,1,6a)
key 为：two
输出：(1,2,7a)
输出：(1,2,8a)
输出：(1,2,9a)
输出：(1,2,10a)
key 为：three
输出：(1,3,11a)
输出：(1,3,12a)
输出：(1,3,13a)
key 为：four
输出：(1,4,14a)
key 为：begin
输出：(1,0,3a)
key 为：one
输出：(1,1,4a)
输出：(1,1,5a)
输出：(1,1,6a)
key 为：two
输出：(1,2,7a)
输出：(1,2,8a)
输出：(1,2,9a)
输出：(1,2,10a)
key 为：three
输出：(1,3,11a)
输出：(1,3,12a)
输出：(1,3,13a)
key 为：four
输出：(1,4,14a)
key 为：one
输出：(1,1,4a)
输出：(1,1,5a)
输出：(1,1,6a)
key 为：two
输出：(1,2,7a)
输出：(1,2,8a)
输出：(1,2,9a)
输出：(1,2,10a)
key 为：three
输出：(1,3,11a)
输出：(1,3,12a)
输出：(1,3,13a)
key 为：four
输出：(1,4,14a)
key 为：one
输出：(1,1,5a)
输出：(1,1,6a)
key 为：two
输出：(1,2,7a)
输出：(1,2,8a)
输出：(1,2,9a)
输出：(1,2,10a)
key 为：three
输出：(1,3,11a)
输出：(1,3,12a)
输出：(1,3,13a)
key 为：four
输出：(1,4,14a)

---------------- 修改begin为AfterMatchSkipStrategy.noSkip() 不会发生变化

---------------- 修改begin为AfterMatchSkipStrategy.skipToNext() 不会发生变化